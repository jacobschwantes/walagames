import type { Metadata } from "next";
import { Bebas_Neue, Inter } from "next/font/google";
import "./globals.css";
import Header from "@/components/layout/header";
import { Toaster } from "sonner";
import { cn } from "@/lib/utils";
import { BookOpenIcon, HomeIcon, Gamepad2Icon, UserIcon } from "lucide-react";
import Link from "next/link";
const inter = Inter({ subsets: ["latin"] });
const bebas = Bebas_Neue({ subsets: ["latin"], weight: "400" });
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={cn(bebas.className, "dark bg-gray-950")}>
        <div className="bg-gradient-to-t to-sky-950/50 via-transparent  from-red-950/50 flex flex-col h-screen">
          <Header />
          <div className="flex-1 flex w-full">
            <SideBar />
            <div className="flex-1">{children}</div>
          </div>
        </div>

        <Toaster />
      </body>
    </html>
  );
}

const SideBar = () => {
  const routes = [
    {
      name: "Home",
      icon: (props) => <HomeIcon {...props} />,
      href: "/",
    },
    {
      name: "Library",
      icon: (props) => <BookOpenIcon {...props} />,
      href: "/lobby",
    },
    {
      name: "Play",
      icon: (props) => <Gamepad2Icon {...props} />,
      href: "/play",
    },
    {
      name: "Profile",
      icon: (props) => <UserIcon {...props} />,
      href: "/profile",
    },
  ];
  return (
    <nav className="w-24 h-full bg-gray-950/40 border-r border-red-500">
      <div className="flex flex-col items-center p-4 gap-2.5">
        {routes2.map((route) => (
          <Link href={route.href} className=" w-full group" key={route.name}>
            <button
              key={route.name}
              className={cn(
                " relative w-full aspect-square shadow-2xl scale-x-100 rounded-xl trasiton-all duration-300",
                route.classNames.shadow
              )}
            >
              {/* bg border */}
              <div
                className={cn(
                  " shadow-lg w-full h-full -translate-y-[3px] group-hover:-translate-y-[1px]  group-hover:brightness-105   duration-300    overflow-hidden rounded-xl absolute border-t-[.5px] border-x-[.5px]  transition-all z-10 inset-0 ",
                  route.classNames.card
                )}
              >
                {/* bg, border, shadow */}
                {/* <span
                  className={cn(
                    `block  border shadow-2xl py-1 rounded-xl absolute top-4  left-4 px-3 z-20`,
                    game.classNames.badge
                  )}
                >
                  <h2 className="text-lg font-medium text-white tracking-wide">
                    {game.name}
                  </h2>
                </span> */}
                <span
                  className={cn(
                    ` absolute  inset-0 text-white z-30 block p-3`
                    // game.classNames.badge
                  )}
                >
                  <route.icon className=" " />
                </span>

                {/* <div className="absolute  w-1/3 bottom-3 left-5 z-30 text-white group-hover:scale-105 duration-300 transition-all group-hover:-rotate-[8deg] ">
                  <game.icon />
                </div> */}
                {/* bg gradient */}
                <div
                  className={cn(
                    "rounded-b-[3rem] transition-all  bg-gradient-to-t w-full h-full scale-x-[1] scale-y-[.92] blur-xl group-hover:blur-[30px] duration-300 bottom-3 group-hover:bottom-4 absolute ",
                    route.classNames.face
                  )}
                ></div>
                {/* <div
                  className={cn(
                    "absolute   duration-300 transition-all w-3/4 -bottom-12 -right-8  text-white opacity-35 group-hover:opacity-100 z-10 ",
                    route.classNames.icon
                  )}
                >
                  <route.icon />
                </div> */}
              </div>
              {/* Border and bg gradient */}
              <span
                className={cn(
                  " w-full h-full rounded-xl transition-all absoute from-10% to-90% block inset-0 scale-x-[1] duration-300 bg-gradient-to-r border",
                  route.classNames.border
                )}
              ></span>
            </button>
          </Link>
        ))}
      </div>
    </nav>
  );
};

const routes2 = [
  {
    name: "Play",
    classNames: {
      badge: "bg-sky-900/50 border-sky-400/40 shadow-sky-400",
      card: "bg-sky-500 border-sky-300",
      face: "from-sky-600 to-sky-800 via-sky-700",
      border: "border-sky-800 from-sky-900 via-sky-800 to-sky-900",
      icon: "text-sky-500",
      shadow: "group-hover:shadow-sky-900/80",
    },
    href: "/play",
    icon: () => (
      <svg
        fill="currentColor"
        viewBox="0 0 100 125"
        // style="enable-background:new 0 0 100 100;"
      >
        <path d="M79.5,55.5L52.3,76L28.8,93.6c-1.3,1-2.7,1.4-4.1,1.4c-3.6,0-6.9-2.8-6.9-6.9V50V11.9c0-4.1,3.4-6.9,6.9-6.9  c1.4,0,2.8,0.4,4.1,1.4L52.3,24l27.2,20.4C83.2,47.2,83.2,52.8,79.5,55.5z" />
      </svg>
    ),
  },
  {
    name: "Library",
    href: "/library",
    classNames: {
      badge: "bg-red-900/50 border-red-400/40 shadow-red-400",
      card: "bg-red-500 border-red-300",
      face: "from-red-600 to-red-800 via-red-700",
      border: "border-red-800 from-red-900 via-red-800 to-red-900",
      icon: "text-red-500",
      shadow: "group-hover:shadow-red-900/80",
    },
    icon: () => (
      <svg fill="currentColor" viewBox="0 0 100 125">
        <path d="M66.42993,14.28949v-.93A8.35392,8.35392,0,0,0,58.08,5H13.35A8.35392,8.35392,0,0,0,5,13.3595V58.087a8.35173,8.35173,0,0,0,8.35,8.34948h.93V27.63867A13.36623,13.36623,0,0,1,27.62988,14.28949Z" />
        <path d="M41.91992,28.56866H80.72v-.93a8.35181,8.35181,0,0,0-8.3501-8.34949h-44.73A8.35389,8.35389,0,0,0,19.28,27.63867V72.36621a8.35387,8.35387,0,0,0,8.35986,8.34955H28.57V41.91791A13.36627,13.36627,0,0,1,41.91992,28.56866Z" />
        <rect
          x="33.56665"
          y="33.57007"
          width="61.43335"
          height="61.42993"
          rx="8.35144"
          ry="8.35144"
        />
      </svg>
    ),
  },
];

const NavButton = ({ name, classNames, ...props }) => {
  return (
    <button key={route.name} className="group relative w-full aspect-video ">
      {/* bg border */}
      <div
        className={cn(
          " shadow-lg w-full h-full -translate-y-[6px] group-hover:-translate-y-[2px]  group-hover:brightness-105   duration-300    overflow-hidden rounded-2xl absolute border-t-[1px] border-x-[1px]  transition-all z-10 inset-0 ",
          classNames.card
        )}
      >
        {/* bg, border, shadow */}
        {/* <span
                  className={cn(
                    `block  border shadow-2xl py-1 rounded-xl absolute top-4  left-4 px-3 z-20`,
                    game.classNames.badge
                  )}
                >
                  <h2 className="text-lg font-medium text-white tracking-wide">
                    {game.name}
                  </h2>
                </span> */}
        <span
          className={cn(
            ` absolute bottom-3  left-5 z-20 block`
            // game.classNames.badge
          )}
        >
          <h2 className=" text-7xl text-white tracking-wide">{name}</h2>
        </span>

        {/* <div className="absolute  w-1/3 bottom-3 left-5 z-30 text-white group-hover:scale-105 duration-300 transition-all group-hover:-rotate-[8deg] ">
                  <game.icon />
                </div> */}
        {/* bg gradient */}
        <div
          className={cn(
            "rounded-b-[3rem] transition-all  bg-gradient-to-t w-full h-full scale-x-[1] scale-y-[.92] blur-xl group-hover:blur-[30px] duration-300 bottom-3 group-hover:bottom-4 absolute ",
            classNames.face
          )}
        ></div>
        <div
          className={cn(
            "absolute   duration-300 transition-all w-3/4 -bottom-12 -right-8  text-white opacity-35 group-hover:opacity-100 z-10 ",
            classNames.icon
          )}
        >
          <props.icon />
        </div>
      </div>
      {/* Border and bg gradient */}
      <span
        className={cn(
          " w-full h-full rounded-md  transition-all absoute from-10% to-90% block inset-0 scale-x-[1] duration-300 bg-gradient-to-r border",
          classNames.border
        )}
      ></span>
    </button>
  );
};
